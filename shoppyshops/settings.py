"""
Django settings for shoppyshops project.

Generated by 'django-admin startproject' using Django 5.1.3.

For more information on this file, see
https://docs.djangoproject.com/en/5.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.1/ref/settings/
"""

import os
from pathlib import Path
import environ

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent

# Initialize environment variables
env = environ.Env(
    DEBUG=(bool, False),
    EBAY_ENV=(str, 'sandbox'),
    META_ENV=(str, 'sandbox'),
)

# Read environment variables from .env file
environ.Env.read_env(BASE_DIR / '.env')

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = env('SECRET_KEY', default='your-default-secret-key')

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = env('DEBUG', default=True)

ALLOWED_HOSTS = [
    'localhost',
    '127.0.0.1',
    '.ngrok-free.app',  # Allow all ngrok domains
]

# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'daphne',
    'django.contrib.staticfiles',
    'django_htmx',
    'livereload',
    'shopify',
    'shoppyshop',
    'ebay',
    'meta',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'shoppyshops.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [BASE_DIR / 'templates'],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

ASGI_APPLICATION = 'shoppyshops.asgi.application'

# Database
# https://docs.djangoproject.com/en/5.1/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}

# Password validation
# https://docs.djangoproject.com/en/5.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

# Internationalization
# https://docs.djangoproject.com/en/5.1/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.1/howto/static-files/

STATIC_URL = 'static/'

# Default primary key field type
# https://docs.djangoproject.com/en/5.1/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

# Shopify settings
SHOPIFY_API_KEY = env('SHOPIFY_API_KEY')
SHOPIFY_API_SECRET = env('SHOPIFY_API_SECRET')
SHOPIFY_ACCESS_TOKEN = env('SHOPIFY_ACCESS_TOKEN')
SHOPIFY_URL = env('SHOPIFY_URL')
SHOPIFY_API_VERSION = env('SHOPIFY_API_VERSION')

# eBay settings
EBAY_ENV = env('EBAY_ENV')
EBAY_DEV_ID = env('EBAY_DEV_ID')
EBAY_USER_TOKEN = env('EBAY_USER_TOKEN')
EBAY_APP_ID = env('EBAY_PROD_APP_ID') if EBAY_ENV == 'production' else env('EBAY_SANDBOX_APP_ID')
EBAY_CERT_ID = env('EBAY_PROD_CERT_ID') if EBAY_ENV == 'production' else env('EBAY_SANDBOX_CERT_ID')

# Meta settings
META_ENV = env('META_ENV')
META_APP_ID = env('META_PROD_APP_ID') if META_ENV == 'production' else env('META_SANDBOX_APP_ID')
META_APP_SECRET = env('META_PROD_APP_SECRET') if META_ENV == 'production' else env('META_SANDBOX_APP_SECRET')
META_ACCESS_TOKEN = env('META_PROD_ACCESS_TOKEN') if META_ENV == 'production' else env('META_SANDBOX_ACCESS_TOKEN')
